{    
   "apiVersion"      : "1.0.0",
   "swaggerVersion"  : "1.2",
   "basePath"        : "/api/v1",
   "resourcePath"    : "/types",
   "produces": [
      "application/json"
   ],
   "apis": [
      { 
         "path": "/types",
         "operations": [
            {
               "method"     : "POST",
               "summary"    : "Creates a type.",
               "notes"      : "<h3>Creates a type on the Cloudlet platform</h3>Creates an OPENi Type on the platform. An OPENi type defines how an OPENi object is structured. A type has a number of required fields including _reference and _context. The _context contains an array of member descriptions that an object requires so that it is compliant with the Type. When an OPENi Object is persisted to the system it is validated against the context as outlined in its OPENiType. <br/><br/>The Types allow for members of the following primitive types to be defined in the OPENi Objects.<br><br><ul><li>boolean</li><li>int</li><li>float</li><li>string</li><li>hexadecimal</li><li>base64</li><li>date(DD-MM-YYYY)</li><li>timestamp(yyyy-MM-dd HH:mm:ss.SSS)</li><li>OPENitype</li></ul>",
               "type"       : "CreateResponse",
               "nickname"   : "createType",
               "parameters" : [
                  {
                     "name"         : "data",
                     "description"  : "The type to be created.",
                     "required"     : true,
                     "type"         : "OPENiType",
                     "paramType"    : "body"
                  }
               ],
               "responseMessages": [
                  {
                     "code": 400,
                     "message": "Bad Request",
                     "responseModel": "CreateErrorResponse"
                  },
                  {
                     "code": 401,
                     "message": "Not Authorised",
                     "responseModel": "CreateErrorResponse"
                  }
               ]
            },
            {
               "method"     : "PATCH",
               "summary"    : "Create multiple types in a single request.",
               "notes"      : "Create multiple types to a in one go.",
               "type": "array",
               "items": {
                  "$ref" : "CreateResponse"
               },
               "nickname"   : "createTypes",
               "parameters" : [
                  {
                     "name"         : "body",
                     "description"  : "JSON array of the types to be created.",
                     "required"     : true,
                     "type": "array",
                     "items": {
                        "$ref" : "OPENiType"
                     },
                     "paramType"    : "body"
                  }
               ],
               "responseMessages": [
                  {
                     "code": 400,
                     "message": "Bad Request",
                     "responseModel": "CreateErrorResponse"
                  },
                  {
                     "code": 401,
                     "message": "Not Authorised",
                     "responseModel": "CreateErrorResponse"
                  }
               ]
            }
         ]
      },
      {
         "path": "/types",
         "operations": [
            {
               "method"     : "GET",
               "summary"    : "Retrieves the OPENi types on the system.",
               "notes"      : "Retrieves the OPENi types on the system.. ",
               "type": "array",
               "items": {
                  "$ref" : "OPENiType"
               },
               "nickname"   : "getTypes",
               "parameters" : [
                  {
                     "name"        : "skip",
                     "description" : "Pagination feature, the amount of objects to skip.",
                     "required"    : false,
                     "type"        : "int",
                     "paramType"   : "query"
                  },
                  {
                     "name"        : "limit",
                     "description" : "The amount of objects to return.",
                     "required"    : false,
                     "type"        : "int",
                     "paramType"   : "query"
                  },
                  {
                     "name"          : "id_only",
                     "description"   : "If true returns an array of object ids instead of the full objects.",
                     "required"      : false,
                     "type"          : "boolean",
                     "paramType"     : "query",
                     "allowMultiple" : false
                  },
                  {
                     "name"          : "content-type",
                     "description"   : "Supported content-type is application/json-ld.",
                     "required"      : false,
                     "type"          : "string",
                     "enum"          : ["application/json-ld"],
                     "paramType"     : "query",
                     "allowMultiple" : true
                  }
               ],
               "responseMessages": [
                  {
                     "code": 400,
                     "message": "Object not found",
                     "responseModel": "ObjectErrorResponse"
                  },
                  {
                     "code": 401,
                     "message": "Unauthorised request",
                     "responseModel": "ObjectErrorResponse"
                  }
               ]
            }]
      },
      {
         "path": "/types/{typeID}",
         "operations": [
            {
               "method"     : "GET",
               "summary"    : "Get a type.",
               "notes"      : "Returns the type associated with the provided Id.",
               "type"       : "OPENiType",
               "nickname"   : "getType",
               "parameters" : [
                  {
                     "name"         : "typeID",
                     "description"  : "The Id of the type.",
                     "required"     : true,
                     "type"        : "string",
                     "paramType"    : "path"
                  },
                  {
                     "name"          : "content-type",
                     "description"   : "Supported content-type is application/json-ld.",
                     "required"      : false,
                     "type"          : "string",
                     "enum"          : ["application/json-ld"],
                     "paramType"     : "query",
                     "allowMultiple" : true
                  }
               ],
               "responseMessages": [
                  {
                     "code": 400,
                     "message": "Bad Request",
                     "responseModel": "CreateErrorResponse"
                  },
                  {
                     "code": 401,
                     "message": "Not Authorised",
                     "responseModel": "CreateErrorResponse"
                  }
               ]
            }
         ]
      },
      {
         "path": "/types/stats",
         "operations": [
            {
               "method"     : "GET",
               "summary"    : "Retrieves the Types usage stats.",
               "notes"      : "Retrieves the Types usage stats.",
               "type"        : "array",
               "items"       : {
                  "$ref" : "Stat"
               },
               "nickname"   : "getStats",
               "parameters" : [
               ],
               "responseMessages": [
                  {
                     "code": 400,
                     "message": "Object not found",
                     "responseModel": "ObjectErrorResponse"
                  },
                  {
                     "code": 401,
                     "message": "Unauthorised request",
                     "responseModel": "ObjectErrorResponse"
                  }
               ]
            }]
      }
   ],
   "models": {
      "OPENiType": {
         "id": "OPENiType",
         "properties": {
            "@id": {
               "type"        : "string",
               "description" : "Unique identifier for the type",
               "required"    : false
            },
            "@location": {
               "type"        : "string",
               "description" : "Unique types URI",
               "required"    : false
            },
            "@context": {
               "type"        : "array",
               "description" : "An array of Types",
               "items"       : {
                  "$ref" : "ContextEntry"
               }
            },
            "@reference": {
               "type"        : "string",
               "description" : "The URL of the refernce type.",
               "required"    : true
            },
            "_date_created": {
               "type"        : "Date",
               "description" : "Date that the Type was created.",
               "required"    : false
            }
         }
      },
      "Stat": {
         "id": "Stat",
         "properties": {
            "key": {
               "type"        : "string",
               "description" : "The stat key",
               "required"    : true
            },
            "value": {
               "type"        : "int",
               "description" : "The stat value",
               "required"    : true
            }
         }
      },
      "CreateResponse": {
         "id": "CreateResponse",
         "properties": {
            "@id": {
               "type"        : "string",
               "description" : "The id of the newly created OPENi Type",
               "required"    : true
            }
         }
      },
      "CreateResponseArray": {
         "id": "CreateResponseArray",
         "properties": {
            "types": {
               "type"        : "array",
               "description" : "An array of create responses",
               "items"       : {
                  "$ref" : "CreateResponse"
               }
            }
         }
      },
      "CreateErrorResponse": {
         "id": "CreateErrorResponse",
         "properties": {
            "error": {
               "type"        : "string",
               "description" : "Description of error that occurred.",
               "required"    : true
            }
         }
      },
      "ContextEntryArray": {
         "id": "ContextEntryArray",
         "properties": {
            "@context": {
               "type"        : "array",
               "description" : "An array of Types",
               "items"       : {
                  "$ref" : "ContextEntry"
               }
            }
         }
      },
      "ContextEntry": {
         "id": "ContextEntry",
         "properties": {
            "@property_name": {
               "type"        : "string",
               "description" : "Identifier for the context",
               "required"    : true
            },
            "@property_context": {
               "type"        : "ContextValue",
               "description" : "The type's semantic context (optional?)",
               "required"    : true
            }
         }
      },
      "ContextValue": {
         "id": "ContextValue",
         "properties": {
            "@id": {
               "type"        : "string",
               "description" : "Identifier for the context",
               "required"    : true
            },
            "@openi_type": {
               "type"        : "string",
               "description" : "The type's semantic context (optional?)",
               "required"    : true
            }
         }
      }
   }
}
