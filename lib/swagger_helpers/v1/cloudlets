{ 
   "apiVersion"      : "1.0.0",
   "swaggerVersion"  : "1.2",
   "basePath"        : "/api/v1",
   "resourcePath"    : "/cloudlets",
   "produces"        : [
      "application/json"
   ],
   "apis": [
      {
         "path"       : "/cloudlets",
         "operations" : [
            {
               "method"     : "POST",
               "summary"    : "Creates a Cloudlet",
               "notes"      : "Provisions a Cloudlet on the Cloudlet Platform. This is an internal API that only the resource service can use.",
               "type"       : "CloudletResponse",
               "nickname"   : "createCloudlet",
               "parameters" : [
                  {
                     "name"          : "data",
                     "description"   : "The Cloudlet data",
                     "required"      : true,
                     "type"          : "OPENiCloudlet",
                     "paramType"     : "body"
                  }
               ],
               "responseMessages": [
                  {
                     "code": 501,
                     "message": "Not yet Implemented"
                  },
                  {
                     "code": 400,
                     "message": "Bad Request",
                     "responseModel": "CloudletErrorResponse"
                  },
                  {
                     "code": 401,
                     "message": "Unauthorised request",
                     "responseModel": "CloudletErrorResponse"
                  },
                  {
                     "code": 405,
                     "message": "Method Not allowed",
                     "responseModel": "CloudletErrorResponse"
                  }
               ]
            }
         ]
      },
      {
         "path": "/cloudlets/{cloudletId}",
         "operations": [
            {
               "method"     : "DELETE",
               "summary"    : "DELETE Cloudlet by Id",
               "notes"      : "This endpoint allows a user delete their Cloudlet. When called all their data is purged from their Cloudlet and indexes referring to their Cloudlet are removed.",
               "type"       : "CloudletResponse",
               "nickname"   : "deleteCloudletById",
               "parameters" : [
                  {
                     "name"        : "cloudletId",
                     "description" : "The id of the Cloudlet that is to be deleted.",
                     "required"    : true,
                     "type"        : "String",
                     "paramType"   : "path"
                  }
               ],
               "responseMessages": [
                  {
                     "code": 501,
                     "message": "Not yet Implemented"
                  },
                  {
                     "code": 400,
                     "message": "Bad Request",
                     "responseModel": "CloudletErrorResponse"
                  },
                  {
                     "code": 401,
                     "message": "Unauthorised request",
                     "responseModel": "CloudletErrorResponse"
                  },
                  {
                     "code": 405,
                     "message": "Method Not allowed",
                     "responseModel": "CloudletErrorResponse"
                  }
               ]
            }
         ]
      },
      {
         "path": "/cloudlets/{cloudletId}",
         "operations": [
            {
               "method"     : "GET",
               "summary"    : "Export Cloudlet data.",
               "notes"      : "This endpoint allows a user export all their data from their Cloudlet. Data is exported in a json file.",
               "type"       : "OPENiCloudlet",
               "nickname"   : "exportCloudletById",
               "parameters" : [
                  {
                     "name"        : "cloudletId",
                     "description" : "The id of the Cloudlet that is to be exported.",
                     "required"    : true,
                     "type"        : "String",
                     "paramType"   : "path"
                  }
               ],
               "responseMessages": [
                  {
                     "code": 400,
                     "message": "Bad Request",
                     "responseModel": "CloudletErrorResponse"
                  },
                  {
                     "code": 401,
                     "message": "Unauthorised request",
                     "responseModel": "CloudletErrorResponse"
                  },
                  {
                     "code": 405,
                     "message": "Method Not allowed",
                     "responseModel": "CloudletErrorResponse"
                  },
                  {
                     "code": 501,
                     "message": "Not yet Implemented"
                  }
               ]
            }
         ]
      }
   ],
   "models": {
      "OPENiCloudlet": {
         "id": "OPENiCloudlet",
         "properties": {
            "id": {
               "type"        : "string",
               "description" : "Unique identifier for the Cloudlet.",
               "required"    : false
            },
            "alias": {
               "type"        : "string",
               "description" : "Human readable name for the Cloudlet.",
               "required"    : true
            },
            "username": {
               "type"        : "string",
               "description" : "Username of person who owns the Cloudlet.",
               "required"    : true
            },
            "date_created": {
               "type"        : "string",
               "description" : "Timestamp of creation of the Cloudlet",
               "required"    : false
            },
            "_revision": {
               "type"        : "string",
               "description" : "Revision number associated with this version of the Cloudlet",
               "required"    : false
            }
         }
      },
      "CloudletResponse": {
         "id": "CloudletResponse",
         "properties": {
            "id": {
               "type"        : "string",
               "description" : "The ID of the Cloudlet acted upon.",
               "required"    : true
            }
         }
      },
      "CloudletErrorResponse": {
         "id": "CloudletErrorResponse",
         "properties": {
            "error": {
               "type"        : "string",
               "description" : "Description of error that occurred.",
               "required"    : true
            }
         }
      }
   }
}
