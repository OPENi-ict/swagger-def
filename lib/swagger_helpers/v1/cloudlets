{ 
   "apiVersion"      : "1.0.0",
   "swaggerVersion"  : "1.2",
   "basePath"        : "/api/v1",
   "resourcePath"    : "/cloudlets",
   "produces"        : [
      "application/json"
   ],
   "apis": [
      {
         "path": "/cloudlets",
         "operations": [
            {
               "method"        : "GET",
               "summary"       : "Export Cloudlet data.",
               "notes"         : "This endpoint returns the cloudlet id associated with the presented token. \n\r\n\r{ \"token\":  { \"user\": \"dmccarthy\" },   \"signature\": \"cVnf/YsH/h+554tlAAh5CvyLr3Y9xrqAK4zxTA/C8PMDWcjcUZistg90H2HiCL/tAL3VZe/53VbJcrFZGyFZDw==\" }",
               "type"          : "OPENiCloudlet",
               "responseClass" : "OPENiCloudlet",
               "nickname"      : "getCloudletId",
               "parameters"    : [
                  {
                     "name"        : "auth_token",
                     "description" : "",
                     "required"    : true,
                     "type"        : "string",
                     "paramType"   : "header"
                  }
               ],
               "responseMessages": [
                  {
                     "code": 400,
                     "message": "Bad Request",
                     "responseModel": "CloudletErrorResponse"
                  },
                  {
                     "code": 401,
                     "message": "Unauthorised request",
                     "responseModel": "CloudletErrorResponse"
                  },
                  {
                     "code": 405,
                     "message": "Method Not allowed",
                     "responseModel": "CloudletErrorResponse"
                  },
                  {
                     "code": 501,
                     "message": "Not yet Implemented"
                  }
               ]
            }
         ]
      },
      {
         "path": "/cloudlets/allow_access",
         "operations": [
            {
               "method"     : "POST",
               "summary"    : "Grants third part access to cloudlets.",
               "notes"      : "{ \"token\": { \"user\": \"johannes\" }, \"signature\": \"cYsQM8bctR9JnOinZCO3M46lY/cjfVaNN9GtBM9iQJLOlv2CLkxpa/7biK8iJyQl6z+Fa6HC25Ct7+JreMrlCQ==\" }",
               "type"       : "Status",
               "nickname"   : "allowAccess",
               "parameters" : [
                  {
                     "name"        : "auth_token",
                     "description" : "The users auth token.",
                     "required"    : true,
                     "type"        : "string",
                     "paramType"   : "header"
                  },
                  {
                     "name"          : "third_party_token",
                     "description"   : "If true returns an array of object ids instead of the full objects.",
                     "required"      : false,
                     "type"          : "string",
                     "paramType"     : "body",
                     "allowMultiple" : false
                  }
               ],
               "responseMessages": [
                  {
                     "code": 401,
                     "message": "Unauthorised request",
                     "responseModel": "ObjectErrorResponse"
                  }
               ]
            }]
      },
      {
         "path": "/cloudlets/revoke_access",
         "operations": [
            {
               "method"     : "POST",
               "summary"    : "Revokes access to Cloudlets on the platform.",
               "notes"      : "Revokes access to Cloudlets on the platform.",
               "type"       : "Status",
               "nickname"   : "revokeAccess",
               "parameters" : [
                  {
                     "name"        : "auth_token",
                     "description" : "The users auth token.",
                     "required"    : true,
                     "type"        : "string",
                     "paramType"   : "header"
                  },
                  {
                     "name"          : "third_party_token",
                     "description"   : "If true returns an array of object ids instead of the full objects.",
                     "required"      : false,
                     "type"          : "string",
                     "paramType"     : "body",
                     "allowMultiple" : false
                  }
               ],
               "responseMessages": [
                  {
                     "code": 401,
                     "message": "Unauthorised request",
                     "responseModel": "ObjectErrorResponse"
                  }
               ]
            }]
      },
      {
         "path": "/cloudlets/all",
         "operations": [
            {
               "method"     : "GET",
               "summary"    : "Retrieves all Cloudlets on the platform.",
               "notes"      : "Retrieves all Cloudlets on the platform.",
               "type": "array",
               "items": {
                  "$ref" : "OPENiCloudlet"
               },
               "nickname"   : "getCloudlets",
               "parameters" : [
                  {
                     "name"        : "skip",
                     "description" : "Pagination feature, the amount of objects to skip.",
                     "required"    : false,
                     "type"        : "int",
                     "paramType"   : "query"
                  },
                  {
                     "name"        : "limit",
                     "description" : "The amount of objects to return.",
                     "required"    : false,
                     "type"        : "int",
                     "paramType"   : "query"
                  },
                  {
                     "name"          : "id_only",
                     "description"   : "If true returns an array of object ids instead of the full objects.",
                     "required"      : false,
                     "type"          : "boolean",
                     "paramType"     : "query",
                     "allowMultiple" : false
                  }
               ],
               "responseMessages": [
                  {
                     "code": 400,
                     "message": "Object not found",
                     "responseModel": "ObjectErrorResponse"
                  },
                  {
                     "code": 401,
                     "message": "Unauthorised request",
                     "responseModel": "ObjectErrorResponse"
                  }
               ]
            }]
      }
   ],
   "models": {
      "OPENiCloudlet": {
         "id": "OPENiCloudlet",
         "properties": {
            "id": {
               "type"        : "string",
               "description" : "Unique identifier for the Cloudlet.",
               "required"    : false
            },
            "_date_created": {
               "type"        : "Date",
               "description" : "Timestamp of creation of the Cloudlet",
               "required"    : false
            }
         }
      },
      "CloudletResponse": {
         "id": "CloudletResponse",
         "properties": {
            "id": {
               "type"        : "string",
               "description" : "The ID of the Cloudlet acted upon.",
               "required"    : true
            }
         }
      },
      "Status": {
         "id": "Status",
         "properties": {
            "success": {
               "type"        : "boolean",
               "description" : "True if action was successful.",
               "required"    : true
            }
         }
      },
      "CloudletErrorResponse": {
         "id": "CloudletErrorResponse",
         "properties": {
            "error": {
               "type"        : "string",
               "description" : "Description of error that occurred.",
               "required"    : true
            }
         }
      }
   }
}
