{
   "apiVersion"      : "1.0.0",
   "swaggerVersion"  : "1.2",
   "basePath"        : "/api/v1",
   "resourcePath"    : "/objects",
   "produces": [
      "application/Json"
   ],
   "apis": [
      {
         "path": "/objects/{cloudletId}",
         "operations": [
            {
               "method"     : "POST",
               "summary"    : "Create an Object",
               "notes"      : "<h3>Creates a object on the Cloudlet platform</h3>Creates an object on the platform. An objects structure is based on the _openi_type of which the object is defined.<br>For each property in the type a field and value should be defined. <br><br> For example, if the type had a 'name' property of type string then data would have the entry {'name':'some string name'}",
               "type"       : "ObjectResponse",
               "responseClass" : "ObjectResponse",
               "nickname"   : "createObject",
               "parameters" : [
                  {
                     "name"        : "cloudletId",
                     "description" : "The id of the users cloudlet.",
                     "required"    : true,
                     "type"        : "string",
                     "paramType"   : "path"
                  },
                  {
                     "name"        : "object",
                     "description" : "Object to be created in the cloudlet.",
                     "required"    : true,
                     "type"        : "OPENiObject",
                     "paramType"   : "body"
                  }
               ],
               "responseMessages": [
                  {
                     "code": 400,
                     "message": "Request Error",
                     "responseModel": "ObjectErrorResponse"
                  },
                  {
                     "code": 401,
                     "message": "Unauthorised request",
                     "responseModel": "ObjectErrorResponse"
                  },
                  {
                     "code": 500,
                     "message": "Data could not be added to the cloudlet",
                     "responseModel": "ObjectErrorResponse"
                  }
               ]
            }
         ]
      },
      {
         "path": "/objects/{cloudletId}/{objectId}",
         "operations": [
            {
               "method"     : "GET",
               "summary"    : "Retrieves an object from the Cloudlet.",
               "notes"      : "Returns an object from the Cloudlet.",
               "type"       : "OPENiObject",
               "responseClass" : "OPENiObject",
               "nickname"   : "getObject",
               "parameters" : [
                  {
                     "name"        : "cloudletId",
                     "description" : "The id of the users Cloudlet that is to be accessed.",
                     "required"    : true,
                     "type"        : "string",
                     "paramType"   : "path"
                  },
                  {
                     "name"        : "objectId",
                     "description" : "Id of the object to be accessed.",
                     "required"    : true,
                     "type"        : "string",
                     "paramType"   : "path"
                  }
               ],
               "responseMessages": [
                  {
                     "code": 400,
                     "message": "Object not found",
                     "responseModel": "ObjectErrorResponse"
                  },
                  {
                     "code": 401,
                     "message": "Unauthorised request",
                     "responseModel": "ObjectErrorResponse"
                  }
               ]
            }]
      },
      {
         "path": "/objects/{cloudletId}",
         "operations": [
            {
               "method"     : "GET",
               "summary"    : "Retrieves the Cloudlets Objects.",
               "notes"      : "Returns a Cloudlets objects according to the specified filters. ",
               "type"        : "array",
               "items"       : {
                  "$ref" : "OPENiObject"
               },
               "nickname"   : "getObjects",
               "parameters" : [
                  {
                     "name"        : "cloudletId",
                     "description" : "The id of the users Cloudlet that is to be accessed.",
                     "required"    : true,
                     "type"        : "string",
                     "paramType"   : "path"
                  },
                  {
                     "name"        : "skip",
                     "description" : "Pagination feature, the amount of objects to skip.",
                     "required"    : false,
                     "type"        : "int",
                     "paramType"   : "query"
                  },
                  {
                     "name"        : "limit",
                     "description" : "The amount of objects to return.",
                     "required"    : false,
                     "type"        : "int",
                     "paramType"   : "query"
                  },
                  {
                     "name"          : "type",
                     "description"   : "Limits Object to those of this type.",
                     "required"      : false,
                     "type"          : "string",
                     "paramType"     : "query",
                     "allowMultiple" : true
                  },
                  {
                     "name"          : "id_only",
                     "description"   : "If true returns an array of object ids instead of the full objects.",
                     "required"      : false,
                     "type"          : "boolean",
                     "paramType"     : "query",
                     "allowMultiple" : false
                  },
                  {
                     "name"          : "only_show_properties",
                     "description"   : "Comma seperated list of properties to include in the objects, all others are removed.",
                     "required"      : false,
                     "type"          : "string",
                     "paramType"     : "query",
                     "allowMultiple" : true
                  }
               ],
               "responseMessages": [
                  {
                     "code": 400,
                     "message": "Object not found",
                     "responseModel": "ObjectErrorResponse"
                  },
                  {
                     "code": 401,
                     "message": "Unauthorised request",
                     "responseModel": "ObjectErrorResponse"
                  }
               ]
            }]
      },
      {
         "path": "/objects/{cloudletId}/{objectId}/{revision}",
         "operations": [
            {
               "method"     : "PUT",
               "summary"    : "Updates the properties of on object with the provided properties",
               "notes"      : "Updates the properties of on object with the provided properties.",
               "nickname"   : "setObject",
               "type"        : "ObjectResponse",
               "responseClass" : "ObjectResponse",
               "parameters" : [
                  {
                     "name"        : "cloudletId",
                     "description" : "The id of the users Cloudlet that is to be accessed.",
                     "required"    : true,
                     "type"        : "string",
                     "paramType"   : "path"
                  },
                  {
                     "name"        : "objectId",
                     "description" : "Id of the object to be accessed.",
                     "required"    : true,
                     "type"        : "string",
                     "paramType"   : "path"
                  },
                  {
                     "name"        : "revision",
                     "description" : "revision id of the object to be updated.",
                     "required"    : true,
                     "type"        : "string",
                     "paramType"   : "path"
                  },
                  {
                     "name"        : "data",
                     "description" : "Object with properties that are to be overwritten.",
                     "required"    : true,
                     "type"        : "OPENiObject",
                     "paramType"   : "body"
                  }
               ],
               "responseMessages": [
                  {
                     "code": 400,
                     "message": "Object not found",
                     "responseModel": "ObjectErrorResponse"
                  },
                  {
                     "code": 401,
                     "message": "Unauthorised request",
                     "responseModel": "ObjectErrorResponse"
                  }
               ]
            }
         ]
      },
      {
         "path": "/objects/{cloudletId}/{objectId}",
         "operations": [
            {
               "method"     : "DELETE", 
               "summary"    : "Removes an object from the Cloudlet.",
               "notes"      : "Removes an object from the Cloudlet.",
               "type"       : "ObjectResponse",
               "responseClass" : "ObjectResponse",
               "nickname"   : "removeObject",
               "parameters" : [
                  {
                     "name"        : "cloudletId",
                     "description" : "The id of the users Cloudlet.",
                     "required"    : true,
                     "type"        : "string",
                     "paramType"   : "path"
                  },
                  {
                     "name"        : "objectId",
                     "description" : "Id of the object to be removed.",
                     "required"    : true,
                     "type"        : "string",
                     "paramType"   : "path"
                  }
               ],
               "responseMessages": [
                  {
                     "code": 400,
                     "message": "Object not found",
                     "responseModel": "ObjectErrorResponse"
                  },
                  {
                     "code": 401,
                     "message": "Unauthorised request",
                     "responseModel": "ObjectErrorResponse"
                  }
               ]
            }]
      }
   ],
   "models": {
      "ObjectStatus": {
         "id": "ObjectStatus",
         "properties": {
            "code": {
               "type"        : "integer",
               "format"      : "int32",
               "description" : "Response code",
               "required"    : true
            },
            "message":{
               "type"     :"string",
               "description" : "Descriptive message",
               "required" : false
            }
         }
      },
      "OPENiObject": {
         "id": "OPENiObject",
         "properties": {
            "_id":{
               "type"        :"string",
               "description" : "The Objects identifier.",
               "required"    : false
            },
            "_openi_type": {
               "type"        : "string",
               "description" : "OPENi Type that this object is an instance of.",
               "required"    : true
            },
            "_data":{
               "type"        :"string",
               "description" : "The Objects values.",
               "required"    : true
            },
            "_revision":{
               "type"        : "string",
               "description" : "Revision number associated with this version of the Object, this number must be presented when updating the object",
               "required"    : false
            }
         }
      },
      "ObjectResponse": {
         "id": "ObjectResponse",
         "properties": {
            "id": {
               "type"        : "string",
               "description" : "The ID of the OPENi Object acted upon.",
               "required"    : true
            }
         }
      },
      "Object": {
         "id" : "Object",
         "properties" : {}
      },
      "ObjectErrorResponse": {
         "id": "ObjectErrorResponse",
         "properties": {
            "error": {
               "type"        : "string",
               "description" : "Description of error that occurred.",
               "required"    : true
            }
         }
      }
   }
}
